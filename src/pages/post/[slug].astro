---
/**
 * 목적: 상세 페이지. 정적 출력에서 모든 slug를 사전 계산하여 프리렌더한다.
 */
export async function getStaticPaths() {
  const modules = import.meta.glob('../../../md_page/*.md');
  const paths = [];
  for (const [key, loader] of Object.entries(modules)) {
    const name = key.split('/').pop()?.replace(/\.md$/, '');
    if (!name) continue;
    const mod = await loader();
    paths.push({ params: { slug: name }, props: { mod } });
  }
  return paths;
}

const { mod } = Astro.props as { mod: any };
const { Content, frontmatter } = mod;
---
<html lang="ko">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{frontmatter?.title || '상세'}</title>
    <link rel="icon" href={import.meta.env.BASE_URL + 'favicon.svg'} type="image/svg+xml" />
    <link rel="icon" href={import.meta.env.BASE_URL + 'favicon-32x32.png'} sizes="32x32" />
    <link rel="apple-touch-icon" href={import.meta.env.BASE_URL + 'apple-touch-icon.png'} sizes="180x180" />
    <style>
      /* 목적: 상세 화면 타이포그래피/레이아웃 개선 */
      :root { color-scheme: light dark }
      body { margin: 0; font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif; }
      .wrap { max-width: 860px; margin: 0 auto; padding: 20px; }
      .topbar { position: sticky; top: 0; backdrop-filter: blur(6px); background: color-mix(in oklab, canvas, transparent 35%); border-bottom: 1px solid color-mix(in oklab, canvastext, transparent 90%); z-index: 10; }
      .topbar .inner { display:flex; align-items:center; gap:8px; padding: 10px 20px; max-width: 860px; margin: 0 auto; }
      .btn { appearance: none; border: 1px solid color-mix(in oklab, canvastext, transparent 85%); background: transparent; color: inherit; border-radius: 10px; padding: 8px 12px; cursor: pointer; font-size: 14px; }
      .btn.primary { background: #111827; color: #fff; border-color: #111827; }
      @media (prefers-color-scheme: dark) { .btn.primary { background:#e5e7eb; color:#111827; border-color:#e5e7eb; } }
      .hero { margin: 14px 0 8px; display: none; }
      .hero img { width: 100%; height: auto; border-radius: 12px; display:block; background:#f3f4f6 }
      article { line-height: 1.72; font-size: 16px; }
      article :is(h1,h2,h3) { line-height:1.25; margin: 24px 0 10px; }
      article h1 { font-size: 28px; }
      article h2 { font-size: 22px; }
      article h3 { font-size: 18px; }
      article p { margin: 10px 0; }
      article img { max-width:100%; height:auto; border-radius: 8px; background:#f3f4f6 }
      article pre { overflow:auto; padding:14px; border:1px solid color-mix(in oklab, canvastext, transparent 90%); border-radius:10px; background: color-mix(in oklab, canvastext, transparent 96%); }
      article code:not(pre code) { background: color-mix(in oklab, canvastext, transparent 94%); padding: 2px 6px; border-radius: 6px; }
      article blockquote { border-left:3px solid #9CA3AF; margin: 8px 0; padding: 4px 12px; color:#6b7280 }
      .actions { display:flex; gap:8px; flex-wrap:wrap; margin: 12px 0 18px }
      
    </style>
  </head>
  <body class="container" style="padding:24px;max-width:900px">
    <div class="topbar">
      <div class="inner">
        <a class="btn" href={`${import.meta.env.BASE_URL}`} aria-label="홈으로">← 홈</a>
        <a class="btn" id="source" href="#" target="_blank" rel="noopener" style="display:none">원문 보기</a>
      </div>
    </div>

    <div class="wrap">
      <h1 style="margin:10px 0 6px">{frontmatter?.title}</h1>
      <div class="hero" id="hero"><img alt="" id="heroImg" loading="eager" /></div>

      <div class="actions">
        <a class="btn primary" id="ctaSource" href="#" target="_blank" rel="noopener" style="display:none">원문 바로가기</a>
      </div>

      <article>
        <Content />
      </article>
    </div>

    

    <script type="module">
      // 목적: index.json에서 현재 글 메타/썸네일을 찾아 상세 화면에 반영한다.
      async function hydrateMeta() {
        try {
          const BASE = import.meta.env.BASE_URL;
          const slug = decodeURIComponent(location.pathname.replace(/.*\/post\//,'').replace(/\/?$/,''));
          const res = await fetch(`${BASE}index.json`);
          const data = await res.json();
          const items = (data && data.items) || [];
          const item = items.find((i) => i.slug === slug);
          if (!item) return;

          const hero = document.getElementById('hero');
          const heroImg = document.getElementById('heroImg');
          const source = document.getElementById('source');
          const cta = document.getElementById('ctaSource');
          if (item.thumbnail && hero && heroImg) {
            heroImg.setAttribute('src', item.thumbnail);
            hero.style.display = 'block';
          }
          if (item.source_url && source && cta) {
            source.setAttribute('href', item.source_url);
            cta.setAttribute('href', item.source_url);
            source.style.display='inline-block';
            cta.style.display='inline-block';
          }
        } catch {}
      }
      hydrateMeta();

      // 복사 버튼 제거됨 — 상단에 원문 보기 버튼만 유지
    </script>
  </body>
  </html>


